<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lux-Sit</title>
    <link>https://alpharivs.github.io/malware/</link>
    <description>Recent content in Posts on Lux-Sit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2022 &lt;a href=&#34;https://twitter.com/alpharivs&#34;&gt;Alpharivs&lt;/a&gt;
</copyright>
    <lastBuildDate>Mon, 14 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://alpharivs.github.io/malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wannacry - Part 2</title>
      <link>https://alpharivs.github.io/malware/wannacry/launcher/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alpharivs.github.io/malware/wannacry/launcher/</guid>
      <description>Introduction In this part of the Wannacry malware analysis we will have a look at the launcher that is dropped by the malware component that we analyzed in part - 1
Sample Details Name tasksche.exe Hashes md5 84c82835a5d21bbcf75a61706d8ab549 Detection Results: Now let&amp;rsquo;s just verify that tasksche.exe is actually the same resource that we first saw when performing the static analysis.
pedump wannacry.exe --extract resource:0x320a4 &amp;gt; resource.exemd5sum resource.exe84c82835a5d21bbcf75a61706d8ab549 resource.exePS C:\Users\Euryale\Desktop&amp;gt; Get-FileHash -Alg MD5 .</description>
    </item>
    
    <item>
      <title>Wannacry - Part 1</title>
      <link>https://alpharivs.github.io/malware/wannacry/dropper/</link>
      <pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alpharivs.github.io/malware/wannacry/dropper/</guid>
      <description>Introduction We will be analyzing a sample of the infamous ransomware &amp;ldquo;wannacry&amp;rdquo; and it&amp;rsquo;s behavior and effects in our system, this is not meant to be an analysis of it&amp;rsquo;s cryptographic functions nor a complete reverse engineering of the malware.
We must remember that our objective as malware analysts is to provide information needed to detect, prevent and contain further intrusions that means determining exactly what happened and detecting all the infected machines and examining suspicious files in order to generate useful host/network based signatures to detect and prevent infections in our systems, when falling into a rabbit hole of reverse engineering one must remember what our main objective as analysts is.</description>
    </item>
    
    <item>
      <title>Malware Analysis Network Setup Guide</title>
      <link>https://alpharivs.github.io/malware/lab-setup-guide/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://alpharivs.github.io/malware/lab-setup-guide/</guid>
      <description>Introduction While I was first setting up my malware analysis lab I had to do some tedious troubleshooting and searching for information yielded too little (sometimes too much) information about how to properly set up an internal network so in an attempt to help those who just want to set up the lab (and to keep the notes of the process to myself) I wrote this post.
We will be setting up an Internal Network with virtualbox running on a Windows host (the process for a Linux host machine is virtually the same) that will allow network interactions between a Remnux VM and a Windows VM.</description>
    </item>
    
  </channel>
</rss>
