<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ctf on Lux-Sit</title><link>https://alpharivs.github.io/tags/ctf/</link><description>Recent content in ctf on Lux-Sit</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://twitter.com/alpharivs">Alpharivs&lt;/a></copyright><lastBuildDate>Mon, 21 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://alpharivs.github.io/tags/ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Flare-On 2022 - darn_mice</title><link>https://alpharivs.github.io/writeups/darn_mice/</link><pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate><guid>https://alpharivs.github.io/writeups/darn_mice/</guid><description>Challenge Description “If it crashes its user error.” -Flare Team Challenge Overview We are given a Windows PE32 executable.
+------------------------+------------------------------------------------------------------------------------+ | md5 | cb530dcaf2ac705adb7553fb85c2072e | | sha1 | b952493b9a3590d46d37f74a1e1ef5dc170985a4 | | sha256 | 69300ed34608631e6704d04093001230772f047f8621940ce5f07a6099029f87 | | os | windows | | format | pe | | arch | i386 | | path | darn_mice.exe | +------------------------+------------------------------------------------------------------------------------+ Imports When looking at the imports of the executable there&amp;rsquo;s one that stands out.
Name Function bcrypt.dll BCryptDeriveKeyPBKDF2, BCryptOpenAlgorithmProvider Running capa we can confirm that the executable has encryption capabilities.</description></item><item><title>Flare-On 2022 - Magic 8 Ball</title><link>https://alpharivs.github.io/writeups/magic_8_ball/</link><pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate><guid>https://alpharivs.github.io/writeups/magic_8_ball/</guid><description>Challenge Description You got a question? Ask the 8 ball! Challenge Overview +------------------------+------------------------------------------------------------------------------------+ | md5 | 3c2d4ea7b946596096bf039d0043a07b | | sha1 | ae41beb01a7caa07a5b6e847a7c04016539cba64 | | sha256 | 2fcead898d8f900715c9201f246d040eb9686b8f732e683518e8ef92d26dfa89 | | os | windows | | format | pe | | arch | i386 | | path | Magic8Ball.exe | +------------------------+------------------------------------------------------------------------------------+ We are given a Windows x32 exe and a bunch of DLLs and an assets directory.
remnux@remnux:~/flare/magic8$ file * Magic8Ball.exe: PE32 executable (GUI) Intel 80386, for MS Windows libjpeg-9.</description></item><item><title>Flare-On 2022 - Flaredle</title><link>https://alpharivs.github.io/writeups/flare_flaredle/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://alpharivs.github.io/writeups/flare_flaredle/</guid><description>Challenge Description Welcome to Flare-On 9 You probably won’t win. Maybe you’re like us and spent the year playing Wordle. We made our own version that is too hard to beat without cheating Play it live at: http://flare-on.com/flaredle/ Challenge Overview Upon loading the website we are presented with some sort of Wordle game. Analysis of the Webapp. When testing the app it seems that it only accepts words with a minimum length. After some testing we can see that the length required is 21 characters, upon reaching the length the error message becomes &amp;ldquo;Word not in list!</description></item><item><title>Flare-On 2022 - Pixel Poker</title><link>https://alpharivs.github.io/writeups/flare_pixelpoker/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://alpharivs.github.io/writeups/flare_pixelpoker/</guid><description>Challenge Description I said you wouldn’t win that last one. I lied. The last challenge was basically a captcha. Now the real work begins. Shall we play another game? Challenge Overview A basic check shows us that we have a 32 bit Windows exe file.
remnux@remnux:~/flare/pixelPoker$ file PixelPoker.exe PixelPoker.exe: PE32 executable (GUI) Intel 80386, for MS Windows so let&amp;rsquo;s switch to a Windows VM.
Analysis of the Binary. When we run the file we are presented with the following GUI.</description></item><item><title>HTB - Shared</title><link>https://alpharivs.github.io/htb_writeups/htb_shared/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://alpharivs.github.io/htb_writeups/htb_shared/</guid><description>Enumeration Host Discovery ❯ ping -c3 10.10.11.172 PING 10.10.11.172 (10.10.11.172) 56(84) bytes of data. 64 bytes from 10.10.11.172: icmp_seq=1 ttl=63 time=39.8 ms 64 bytes from 10.10.11.172: icmp_seq=2 ttl=63 time=48.3 ms 64 bytes from 10.10.11.172: icmp_seq=3 ttl=63 time=36.0 ms --- 10.10.11.172 ping statistics --- 3 packets transmitted, 3 received, 0% packet loss, time 2003ms rtt min/avg/max/mdev = 36.012/41.390/48.337/5.152 ms A TTL value of around 64 is a solid indicator that this is a Linux system.
Port Scanning We begin by doing a full range TCP and UDP port scan, it&amp;rsquo;s not the quickest method for doing things quickly but covering the full range in both protocols can sometimes save us some headaches.</description></item></channel></rss>