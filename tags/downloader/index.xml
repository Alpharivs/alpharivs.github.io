<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>downloader on Lux-Sit</title><link>https://alpharivs.github.io/tags/downloader/</link><description>Recent content in downloader on Lux-Sit</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 &lt;a href="https://twitter.com/alpharivs">Alpharivs&lt;/a></copyright><lastBuildDate>Fri, 03 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://alpharivs.github.io/tags/downloader/index.xml" rel="self" type="application/rss+xml"/><item><title>Emotet</title><link>https://alpharivs.github.io/malware/emotet/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://alpharivs.github.io/malware/emotet/</guid><description>Introduction Today we will do an analysis of the Emotet malware, out sample will be a .doc file that contains malicious macros, we will manually extract, decode and deobfuscate the malicious code and talk about multiple ways to perform this task.
Sample Details Hashes MD5 1d6f0e7e30c1d9e3f64b0d36e602da50 SHA-1 895d6dd7f677e45e997b03cef761fc40e10b22ba SHA-256 70b4dbed87a8be890a088d70057ce44413bf3a65df5c5c15d049de0b9c47ff8d Detection Results:
Tools Used - VirtualBox - PEstudio - HxD - Procmon - Process Hacker - fakeDNS - InetSim - Wireshark - Caffeine Basic Static Analysis First we will do some basics checks by loading the document into pestudio to get the hash.</description></item></channel></rss>